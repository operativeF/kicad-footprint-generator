
# Joint parameters are in the format of: [toe, heel, side, crtyd_excess]; all in mm
SOP_QFP = {
    'pGT1mm' : {
        'A' : [0.40, 0.50, 0.07, 0.40],
        'B' : [0.35, 0.45, 0.06, 0.20],
        'C' : [0.30, 0.40, 0.05, 0.10]
    },
    '0.8GT_1LT' : {
        'A' : [0.35, 0.45, 0.06, 0.40],
        'B' : [0.30, 0.40, 0.05, 0.20],
        'C' : [0.25, 0.35, 0.04, 0.10]
    },
    '0.65GT_0.8LT' : {
        'A' : [0.30, 0.40, 0.05, 0.40],
        'B' : [0.25, 0.35, 0.04, 0.20],
        'C' : [0.20, 0.30, 0.03, 0.10]
    },
    '0.5GT_0.65LT' : {
        'A' : [0.25, 0.35, 0.03, 0.40],
        'B' : [0.20, 0.30, 0.02, 0.20],
        'C' : [0.15, 0.25, 0.01, 0.10]
    },
    '0.4GT_0.5LT' : {
        'A' : [0.20, 0.30, 0, 0.40],
        'B' : [0.15, 0.25, -0.01, 0.20],
        'C' : [0.10, 0.20, -0.02, 0.10]
    },
    '0.4LT' : {
        'A' : [0.20, 0.30, -0.01, 0.40],
        'B' : [0.15, 0.25, -0.02, 0.20],
        'C' : [0.10, 0.20, -0.03, 0.10]
    }
}
    
SOD = {
    'SOD' : {
        'A' : [0.30, 0.40, 0.07, 0.40],
        'B' : [0.25, 0.35, 0.06, 0.20],
        'C' : [0.20, 0.30, 0.05, 0.10]
    }
}

Chip = {
    'GT_2010' : {
        'A' : [0.60, 0, 0.05, 0.40],
        'B' : [0.50, 0, 0, 0.20],
        'C' : [0.40, 0, -0.05, 0.10]
    },
    '1812_1815' : {
        'A' : [0.50, 0, 0.05, 0.40],
        'B' : [0.40, 0, 0, 0.20],
        'C' : [0.30, 0, -0.05, 0.10]
    },
    '1206_1210_0612' : {
        'A' : [0.45, 0, 0.05, 0.40],
        'B' : [0.35, 0, 0, 0.20],
        'C' : [0.25, 0, -0.05, 0.10]
    },
    '0603_0705_0805' : {
        'A' : [0.40, 0, 0.05, 0.40],
        'B' : [0.30, 0, 0, 0.20],
        'C' : [0.20, 0, -0.05, 0.10]
    },
    '0402_0306_0502' : {
        'A' : [0.25, 0, 0, 0.20],
        'B' : [0.20, -0.01, -0.01, 0.15],
        'C' : [0.15, -0.02, -0.02, 0.10]
    },
    '0201_0102' : {
        'A' : [0.12, -0.01, -0.01, 0.20],
        'B' : [0.10, -0.02, -0.02, 0.15],
        'C' : [0.08, -0.03, -0.03, 0.10]
    },
    '<=01005' : {
        'A' : [0.06, -0.02, -0.02, 0.20],
        'B' : [0.05, -0.03, -0.03, 0.15],
        'C' : [0.04, -0.04, -0.04, 0.10]
    }
}

SOT = {
    '1.92GT' : {
        'A' : [0.30, 0.40, 0.07, 0.40],
        'B' : [0.25, 0.35, 0.06, 0.20],
        'C' : [0.20, 0.30, 0.05, 0.10]
    },
    '0.95GT_1.92LT' : {
        'A' : [0.25, 0.30, 0.06, 0.40],
        'B' : [0.20, 0.25, 0.05, 0.20],
        'C' : [0.15, 0.20, 0.04, 0.10]
    },
    '0.65GT_0.95LT' : {
        'A' : [0.25, 0.30, 0.05, 0.40],
        'B' : [0.20, 0.25, 0.04, 0.20],
        'C' : [0.15, 0.20, 0.03, 0.10]
    },
    '0.5GT_0.65LT' : {
        'A' : [0.20, 0.25, 0.03, 0.40],
        'B' : [0.15, 0.20, 0.02, 0.20],
        'C' : [0.10, 0.15, 0.01, 0.10]
    },
    '0.4GT_0.5LT' : {
        'A' : [0.20, 0.25, 0, 0.40],
        'B' : [0.15, 0.20, -0.01, 0.20],
        'C' : [0.10, 0.15, -0.02, 0.10]
    },
    '0.4LT' : {
        'A' : [0.20, 0.25, -0.01, 0.40],
        'B' : [0.15, 0.20, -0.02, 0.20],
        'C' : [0.10, 0.15, -0.03, 0.10]
    }
}

DPAK = {
    '2.54GT' : {
        'A' : [0.55, 0.60, 0.30, 0.40],
        'B' : [0.45, 0.50, 0.20, 0.20],
        'C' : [0.35, 0.40, 0.15, 0.10]
    },
    '2.29GT_2.54LT' : {
        'A' : [0.55, 0.60, 0.25, 0.40],
        'B' : [0.45, 0.50, 0.15, 0.20],
        'C' : [0.35, 0.40, 0.10, 0.10]
    },
    '1.70GT_2.29LT' : {
        'A' : [0.45, 0.60, 0.20, 0.40],
        'B' : [0.35, 0.50, 0.10, 0.20],
        'C' : [0.25, 0.40, 0.05, 0.10]
    },
    '1.27GT_1.7LT' : {
        'A' : [0.40, 0.55, 0.10, 0.40],
        'B' : [0.30, 0.45, 0.05, 0.20],
        'C' : [0.20, 0.35, 0, 0.10]
    },
    '1.27LT' : {
        'A' : [0.35, 0.50, 0.10, 0.40],
        'B' : [0.25, 0.40, 0.05, 0.20],
        'C' : [0.15, 0.30, 0, 0.10]
    }
}

BGA = {

}

SOP_QFP_PKGS = ['MSOP', 'SSOP', 'SOP', 'TSSOP', 'QFP', 'SOIC', 'VSSOP']

def get_sop_qfp_joints(pitch, dlvl):

    if pitch > 1:
        return SOP_QFP['pGT1mm'][dlvl]

    elif 0.8 < pitch <= 1:
        return SOP_QFP['0.8GT_1LT'][dlvl]

    elif 0.65 < pitch <= 0.8:
        return SOP_QFP['0.65GT_0.8LT'][dlvl]

    elif 0.5 <  pitch <= 0.65:
        return SOP_QFP['0.5GT_0.65LT'][dlvl]

    elif 0.4 < pitch <= 0.5:
        return SOP_QFP['0.4GT_0.5LT'][dlvl]

    elif pitch < 0.4:
        return SOP_QFP['0.4LT'][dlvl]
        
    else:
        return "Invalid arguments"